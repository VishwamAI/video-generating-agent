name: CI

on:
  push:
    branches:
      - main
      - feature/add-logging-and-genre-support
  pull_request:
    branches:
      - main
      - feature/add-logging-and-genre-support

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Clear Python package cache
      run: |
        pip cache purge

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify installation
      run: |
        pip list
        python -c "import matplotlib.pyplot as plt; print('matplotlib installed successfully')"

    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH:/home/runner/work/video-generating-agent/video-generating-agent/nonrigid_nerf" >> $GITHUB_ENV

    - name: Download pre-trained model
      run: |
        chmod +x download_model.sh
        ./download_model.sh

    - name: Verify model download
      run: |
        if [ -f "models/RealESRGANv2-animevideo-xsx4.pth" ]; then
          echo "Model file exists."
        else
          echo "Model file does not exist."
          exit 1
        fi

    - name: Install Kaggle CLI
      run: |
        pip install kaggle

    - name: Download dataset from Kaggle
      env:
        KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
      run: |
        kaggle datasets download -d rsrishav/youtube-trending-video-dataset -p preprocessed_data || exit 0
        if [ -f "preprocessed_data/youtube-trending-video-dataset.zip" ]; then
          unzip preprocessed_data/youtube-trending-video-dataset.zip -d preprocessed_data
          mkdir -p preprocessed_data/images
          mv preprocessed_data/youtube-trending-video-dataset/* preprocessed_data/images/
        else
          echo "Dataset download failed or file not found."
          exit 1
        fi

    - name: Verify dataset download
      run: |
        if [ -d "preprocessed_data/images" ] && [ "$(ls -A preprocessed_data/images)" ]; then
          echo "Dataset directory exists and is not empty."
        else
          echo "Dataset directory does not exist or is empty."
          exit 1
        fi

    - name: Train model
      run: |
        python nonrigid_nerf/train.py --config nonrigid_nerf/configs/training_config.txt

    - name: Run tests
      run: |
        python -m unittest discover -s tests
